name: Infrastructure cost analyzer

on:
  pull_request:
    paths:
      - "**.tf"
      - "**.tfvars"
      - "**.tfvars.json"
  workflow_dispatch:

# # Allow only one simultaneous workflow to run per 'branch'
# # In case a new workflow run is triggered, cancel any already running instance.
# concurrency:
#   group: "infracost-${{ github.head_ref}}"
#   cancel-in-progress: true

env:
  IAC_TERRAFORM_AWS: iac/terraform/aws
  IAC_POLICIES_INFRACOST: iac/policies/infracost

jobs:
  # This jobs estimates the infrastructure cost changes introduced by a PR
  # The way it works is by analyzing the ouput of the terraform plan for the PR
  # Cost analysis will be added to the PR as a comment
  # Additionally,
  infracost:
    runs-on: ubuntu-latest
    name: Show infracost diff
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      # Create Terraform plan
      - name: "Install terraform"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false # This is recommended so the `terraform show` command outputs valid JSON

      - name: "Terraform init"
        id: init
        run: terraform init
        working-directory: ${{ env.IAC_TERRAFORM_AWS }}

      - name: "Terraform plan"
        id: plan
        run: terraform plan -out plan.tfplan
        working-directory: ${{ env.IAC_TERRAFORM_AWS }}

      - name: "Terraform show"
        id: show
        run: terraform show -json plan.tfplan | tee plan.json
        working-directory: ${{ env.IAC_TERRAFORM_AWS }}

      # - name: "Save Plan JSON"
      #   run: echo '${{ steps.show.outputs.stdout }}' > plan.json # Do not change

      # Run Infracost
      - name: Setup Infracost
        uses: infracost/actions/setup@v1
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Generate Infracost JSON
        run: infracost breakdown --path plan.json --format json --usage-file infracost-usage.yml --out-file /tmp/infracost.json
        working-directory: ${{ env.IAC_TERRAFORM_AWS }}

      - name: Post Infracost comment
        uses: infracost/actions/comment@v1
        with:
          path: /tmp/infracost.json
          behavior: update

      # Run Open Policy Agent
      - name: Setup OPA
        uses: open-policy-agent/setup-opa@v2

      - name: Run OPA
        run: opa eval --input /tmp/infracost.json -d ${{ env.IAC_POLICIES_INFRACOST }}/cost-policy.rego --format pretty "data.infracost.deny" | tee /tmp/opa.out

      - name: Check Policies
        run: |
          denyReasons=$(</tmp/opa.out)
          if [ "$denyReasons" != "[]" ]; then
            echo -e "::error::Cost policy check failed, please check with @donhector before proceeding with the change:\n$denyReasons"
            exit 1
          else
            echo "::info::Cost policy check passed."
          fi
